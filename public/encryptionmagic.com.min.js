const BINARY_DELIMITER_BYTES=new Uint8Array([110,210,151,56,82,118,22,72,150,251,135,49,98,211,231,27,48,68,131,8,136,172,193,73,164,251,184,9,157,190,128,204]);async function encrypt(e,t){if(!e)throw new Error("File content is required");if(!t)throw new Error("Password is required");const r=(new TextEncoder).encode(e),n=crypto.getRandomValues(new Uint8Array(32)),i=await window.crypto.subtle.importKey("raw",(new TextEncoder).encode(t),{name:"PBKDF2"},!1,["deriveBits"]),o=await window.crypto.subtle.deriveBits({name:"PBKDF2",salt:n,iterations:1e4,hash:"SHA-256"},i,640),a=o.slice(0,32),w=o.slice(32,64);let s=o.slice(64);const l=await window.crypto.subtle.importKey("raw",a,{name:"AES-CTR",length:256},!1,["encrypt"]),c=await window.crypto.subtle.encrypt({name:"AES-CTR",counter:s,length:64},l,r),d=await window.crypto.subtle.importKey("raw",w,{name:"HMAC",hash:"SHA-256"},!1,["sign"]),y=await window.crypto.subtle.sign("HMAC",d,c),h=[buf2hex(n),buf2hex(new Uint8Array(y)),buf2hex(new Uint8Array(c))].join("\n"),E=buf2hex((new TextEncoder).encode(h));let u=0,p="$ANSIBLE_VAULT;1.1;AES256\n";for(const e of E)p+=e,u+=1,u%80==0&&(p+="\n");return p}function buf2hex(e){return Array.prototype.map.call(new Uint8Array(e),(e=>("00"+e.toString(16)).slice(-2))).join("")}async function decrypt(e,t){if(!e)throw new Error("Encrypted file content is required");if(!t)throw new Error("Password is required");if(!e.startsWith("$ANSIBLE_VAULT"))throw new Error("Vault text does not start with the header `$ANSIBLE_VAULT;`");const r=e.split("\n"),n=r[0].trim().split(";")[1].trim();if("1.1"!==n&&"1.2"!==n)throw new Error("Currently only 1.1 and 1.2 is supported by this tool");const i=r.slice(1).join("").trim(),[o,a,w]=i.toLowerCase().split("0a"),s=bytesFromHex(decodeHexString(o)),l=bytesFromHex(decodeHexString(a)),c=bytesFromHex(decodeHexString(w)),d=await window.crypto.subtle.importKey("raw",(new TextEncoder).encode(t),{name:"PBKDF2"},!1,["deriveBits"]),y=await window.crypto.subtle.deriveBits({name:"PBKDF2",salt:s,iterations:1e4,hash:"SHA-256"},d,640),h=y.slice(0,32),E=y.slice(32,64);let u=y.slice(64);const p=await window.crypto.subtle.importKey("raw",E,{name:"HMAC",hash:"SHA-256"},!1,["verify"]);if(!await window.crypto.subtle.verify("HMAC",p,l,c))throw new Error("HMAC verification failed, did you enter the wrong password?");const A=await window.crypto.subtle.importKey("raw",h,{name:"AES-CTR",length:256},!1,["decrypt"]),g=await window.crypto.subtle.decrypt({name:"AES-CTR",counter:u,length:64},A,c),B=hasPadding(new Uint8Array(g),16),I=unpad(new Uint8Array(g),16,B);return(new TextDecoder).decode(I)}function decodeHexString(e){let t="";for(let r=0;r<e.length;r+=2){let n=e.substring(r,r+2);t+=String.fromCharCode(parseInt(n,16))}return t}function bytesFromHex(e){let t=new Uint8Array(Math.ceil(e.length/2));for(let r=0;r<t.length;r++)t[r]=parseInt(e.substr(2*r,2),16);return t}function unpad(e,t,r){if(!r)return e;let n=e[e.length-1];if(n<1||n>t)throw new Error("Invalid padding");for(let t=0;t<n;t++)if(e[e.length-1-t]!==n)throw new Error("Invalid padding");return e.slice(0,e.length-n)}function hasPadding(e,t){let r=e[e.length-1];if(r<1||r>t)return!1;for(let t=0;t<r;t++)if(e[e.length-1-t]!==r)return!1;return!0}async function encryptBytes(e,t){if(!e)throw new Error("File content is required");if(!t)throw new Error("Password is required");const r=crypto.getRandomValues(new Uint8Array(32)),n=await window.crypto.subtle.importKey("raw",(new TextEncoder).encode(t),{name:"PBKDF2"},!1,["deriveBits"]),i=await window.crypto.subtle.deriveBits({name:"PBKDF2",salt:r,iterations:1e4,hash:"SHA-256"},n,640),o=i.slice(0,32),a=i.slice(32,64);let w=i.slice(64);const s=await window.crypto.subtle.importKey("raw",o,{name:"AES-CTR",length:256},!1,["encrypt"]),l=await window.crypto.subtle.encrypt({name:"AES-CTR",counter:w,length:64},s,e),c=new Uint8Array(l),d=await window.crypto.subtle.importKey("raw",a,{name:"HMAC",hash:"SHA-256"},!1,["sign"]),y=await window.crypto.subtle.sign("HMAC",d,c),h=new Uint8Array(y);let E=new Uint8Array(r.length+BINARY_DELIMITER_BYTES.length+h.length+BINARY_DELIMITER_BYTES.length+c.length);return E.set(r),E.set(BINARY_DELIMITER_BYTES,r.length),E.set(new Uint8Array(h),r.length+BINARY_DELIMITER_BYTES.length),E.set(BINARY_DELIMITER_BYTES,r.length+BINARY_DELIMITER_BYTES.length+h.length),E.set(new Uint8Array(c),r.length+BINARY_DELIMITER_BYTES.length+h.length+BINARY_DELIMITER_BYTES.length),E}async function decryptBytes(e,t){if(!e)throw new Error("Encrypted file content is required");if(!t)throw new Error("Password is required");const r=indexAll(e,BINARY_DELIMITER_BYTES);if(2!==r.length)throw new Error("Invalid file to decrypt.");let n=r[0],i=r[1],o=new Uint8Array(n),a=new Uint8Array(i-n-BINARY_DELIMITER_BYTES.length),w=new Uint8Array(e.length-i-BINARY_DELIMITER_BYTES.length);o.set(e.subarray(0,o.length)),a.set(e.subarray(n+BINARY_DELIMITER_BYTES.length,n+BINARY_DELIMITER_BYTES.length+a.length)),w.set(e.subarray(i+BINARY_DELIMITER_BYTES.length,i+BINARY_DELIMITER_BYTES.length+w.length));const s=await window.crypto.subtle.importKey("raw",(new TextEncoder).encode(t),{name:"PBKDF2"},!1,["deriveBits"]),l=await window.crypto.subtle.deriveBits({name:"PBKDF2",salt:o,iterations:1e4,hash:"SHA-256"},s,640),c=l.slice(0,32),d=l.slice(32,64);let y=l.slice(64);const h=await window.crypto.subtle.importKey("raw",d,{name:"HMAC",hash:"SHA-256"},!1,["verify"]);if(!await window.crypto.subtle.verify("HMAC",h,a,w))throw new Error("HMAC verification failed, did you enter the wrong password?");const E=await window.crypto.subtle.importKey("raw",c,{name:"AES-CTR",length:256},!1,["decrypt"]),u=await window.crypto.subtle.decrypt({name:"AES-CTR",counter:y,length:64},E,w),p=hasPadding(new Uint8Array(u),16);return unpad(new Uint8Array(u),16,p)}function indexAll(e,t,r=0){let n=[],i=r,o=0,a=e.length,w=t.length;for(;i<a;)e[i]===t[o]?o++:o=0,i++,o===w&&(n.push(i-w),o=0);return n}window.encrypt=encrypt,window.encryptBytes=encryptBytes,window.decrypt=decrypt,window.decryptBytes=decryptBytes;